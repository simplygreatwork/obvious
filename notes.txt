
- use console colors: chalk
- separate derived engines
- use facade for gates
	- to distinguish targets from controls
- find out why quantastica starts so slowly
- for adder.js example, make it easier to set and get 4-bit values

- in addition to .each(), use .one() in adder.js
	- circuit.one(function() {})
	- or
	- let result = circuit.one()

- consider whether to allow:
- either circuit.addGate(targets, controls)
- or circuit.addGate(controls, targets)
- e.g. circuit.options({ controls_first : true})

- allow: no-trace, no-changes

- https://github.com/unconed/mathbox
- adder.js get_value(index, length)

- circuit.read(5, 4)
- circuit.write(5, 4, value)

- no abbreviation  h -> hadamard

- make amplify example more configurable
- e.g. which outcome?
- also: how to customize the level of an amplification?

- inside format.label - use Bits class instead

- changes does not seem to be displaying changes properly

- https://en.wikipedia.org/wiki/Alice_and_Bob